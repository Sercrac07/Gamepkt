---
import '@fontsource/poppins';

interface Props {
  level: string;
}

const { level } = Astro.props;
---

<!doctype html>
<html lang='es'>
  <head>
    <meta charset='UTF-8' />
    <meta name='description' content=`Nivel ${level}` />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/assets/icono.svg' />
    <script is:inline type='module' data-level={level} data-script='1'>
      import { getData } from '/public/js/data.js';

      const selfScript = document.querySelector('script[data-level][data-script="1"]');
      let level = 0;

      level = selfScript.getAttribute('data-level');

      const { levels } = getData();

      selfScript.outerHTML = `<title>Nivel ${level} - ${levels[level].title}</title>`;
    </script>
    <title>Jugar a Game.pkt</title>
  </head>

  <body>
    <main>
      <script is:inline type='module' data-level={level} data-script='2'>
        import { getData } from '/public/js/data.js';

        const selfScript = document.querySelector('script[data-level][data-script="2"]');
        let level = 0;

        level = selfScript.getAttribute('data-level');

        const { levels } = getData();

        const headerStyle = 'padding: 0 50px; grid-area: title; display: flex; justify-content: space-between; align-items: center; background: var(--verdigris);';
        const h3style = 'cursor: pointer;';

        selfScript.outerHTML = `<header style='${headerStyle}'><h1>${levels[level].title}</h1><h3 style='${h3style}'>Nivel ${level}</h3></header>`;
      </script>

      <section id='game-map'></section>

      <footer class='game-mats'>
        <script is:inline type='module' data-level={level} data-script='3'>
          import { getData } from '/public/js/data.js';

          const selfScript = document.querySelector('script[data-level][data-script="3"]');
          let level = 0;

          level = selfScript.getAttribute('data-level');

          const { levels } = getData();

          const liStyle = 'list-style: none; height: auto; display: flex; flex-direction: row;';
          const imgStyle = 'cursor: pointer; height: 100%;';
          const spanStyle = '';

          const html = levels[level].mats.map(mat => `<li style='${liStyle}'><img style='${imgStyle}' src='/assets/${mat.name}.webp' alt='${mat.name}' /><span style='${spanStyle}'></span></li>`).join('');

          selfScript.outerHTML = html;
        </script>

        <ul id='materials'></ul>
        <button id='verify-level'>Verificar</button>
      </footer>
    </main>

    <aside class='show' id='mission'>
      <ul id='missions'>
        <h1>Misiones</h1>
        <script is:inline type='module' data-level={level} data-script='4'>
          import { getData } from '/public/js/data.js';

          const selfScript = document.querySelector('script[data-level][data-script="4"]');
          let level = 0;

          level = selfScript.getAttribute('data-level');

          const { levels } = getData();

          const html = levels[level].missions.map(mission => `<li>${mission}</li>`).join('');

          selfScript.outerHTML = html;
        </script>
      </ul>
      <h3 id='display-mission'>{'<'}</h3>
    </aside>

    <script is:inline type='module' data-level={level} data-script='5'>
      import { handleLevel } from '/public/js/level.js';

      const selfScript = document.querySelector('script[data-level][data-script="5"]');
      let level = 0;

      level = selfScript.getAttribute('data-level');

      handleLevel(level);
    </script>
  </body>
</html>

<style>
  :root {
    --eggshell: #faf3dd;
    --tea-green: #c8d5b9;
    --cambridge-blue: #8fc0a9;
    --verdigris: #68b0ab;
    --viridian: #4a7c59;
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family:
      'Poppins',
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      'Segoe UI',
      Roboto,
      Oxygen,
      Ubuntu,
      Cantarell,
      'Open Sans',
      'Helvetica Neue',
      sans-serif;
  }

  main {
    display: grid;
    grid-template:
      'title title title' 10vh
      'map map map' 80vh
      'mats mats mats' 10vh / 1fr;
    min-height: 100vh;
    overflow: hidden;
  }

  #mission {
    left: 0;
    background: var(--cambridge-blue);
    padding: 10px;
    position: absolute;
    height: 60vh;
    width: 250px;
    top: 50vh;
    transform: translate(-250px, -50%);
    display: flex;
    flex-direction: row;
    align-items: center;
    transition: 0.6s all ease-in-out;
  }

  #mission.show {
    transform: translate(0, -50%);
  }

  #mission > #mision {
    transition: 1s all ease-in-out;
  }

  #mission > ul {
    align-self: self-start;
    height: 100%;
    overflow: auto;
  }

  #mission > h3 {
    cursor: pointer;
    position: absolute;
    background: var(--cambridge-blue);
    left: 100%;
    padding: 6px 12px;
  }

  #mission.show {
    left: 0;
  }

  #mission li {
    list-style: inside;
  }

  #game-map {
    grid-area: map;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
  }

  .game-mats {
    grid-area: mats;
    background: var(--verdigris);
    display: flex;
    flex-direction: row;
    justify-content: space-between;
  }

  .game-mats button {
    width: 5%;
  }
</style>
